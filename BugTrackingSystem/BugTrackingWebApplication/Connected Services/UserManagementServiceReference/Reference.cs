//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BugTrackingWebApplication.UserManagementServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/BugTrackingService")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreaedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BugTrackingWebApplication.UserManagementServiceReference.UserRole RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreaedBy {
            get {
                return this.CreaedByField;
            }
            set {
                if ((this.CreaedByField.Equals(value) != true)) {
                    this.CreaedByField = value;
                    this.RaisePropertyChanged("CreaedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId {
            get {
                return this.PersonIdField;
            }
            set {
                if ((this.PersonIdField.Equals(value) != true)) {
                    this.PersonIdField = value;
                    this.RaisePropertyChanged("PersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BugTrackingWebApplication.UserManagementServiceReference.UserRole Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/BugTrackingService")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Admin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Developer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tester = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Any = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagementServiceReference.IUserManagementService")]
    public interface IUserManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/AddUserRecordResponse")]
        string AddUserRecord(BugTrackingWebApplication.UserManagementServiceReference.Person _person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/AddUserRecordResponse")]
        System.Threading.Tasks.Task<string> AddUserRecordAsync(BugTrackingWebApplication.UserManagementServiceReference.Person _person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllUserRecordsByRole", ReplyAction="http://tempuri.org/IUserManagementService/GetAllUserRecordsByRoleResponse")]
        System.Data.DataSet GetAllUserRecordsByRole(BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllUserRecordsByRole", ReplyAction="http://tempuri.org/IUserManagementService/GetAllUserRecordsByRoleResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllUserRecordsByRoleAsync(BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserRecordByPersonId", ReplyAction="http://tempuri.org/IUserManagementService/GetUserRecordByPersonIdResponse")]
        BugTrackingWebApplication.UserManagementServiceReference.Person GetUserRecordByPersonId(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserRecordByPersonId", ReplyAction="http://tempuri.org/IUserManagementService/GetUserRecordByPersonIdResponse")]
        System.Threading.Tasks.Task<BugTrackingWebApplication.UserManagementServiceReference.Person> GetUserRecordByPersonIdAsync(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/GetUserRecordResponse")]
        BugTrackingWebApplication.UserManagementServiceReference.Person GetUserRecord(int _id, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/GetUserRecordResponse")]
        System.Threading.Tasks.Task<BugTrackingWebApplication.UserManagementServiceReference.Person> GetUserRecordAsync(int _id, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserRecordResponse")]
        string DeleteUserRecord(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserRecordResponse")]
        System.Threading.Tasks.Task<string> DeleteUserRecordAsync(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserRecordResponse")]
        string UpdateUserRecord(BugTrackingWebApplication.UserManagementServiceReference.Person _person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserRecord", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserRecordResponse")]
        System.Threading.Tasks.Task<string> UpdateUserRecordAsync(BugTrackingWebApplication.UserManagementServiceReference.Person _person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/Login", ReplyAction="http://tempuri.org/IUserManagementService/LoginResponse")]
        BugTrackingWebApplication.UserManagementServiceReference.Person Login(string _email, string _password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/Login", ReplyAction="http://tempuri.org/IUserManagementService/LoginResponse")]
        System.Threading.Tasks.Task<BugTrackingWebApplication.UserManagementServiceReference.Person> LoginAsync(string _email, string _password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementServiceChannel : BugTrackingWebApplication.UserManagementServiceReference.IUserManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementServiceClient : System.ServiceModel.ClientBase<BugTrackingWebApplication.UserManagementServiceReference.IUserManagementService>, BugTrackingWebApplication.UserManagementServiceReference.IUserManagementService {
        
        public UserManagementServiceClient() {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddUserRecord(BugTrackingWebApplication.UserManagementServiceReference.Person _person) {
            return base.Channel.AddUserRecord(_person);
        }
        
        public System.Threading.Tasks.Task<string> AddUserRecordAsync(BugTrackingWebApplication.UserManagementServiceReference.Person _person) {
            return base.Channel.AddUserRecordAsync(_person);
        }
        
        public System.Data.DataSet GetAllUserRecordsByRole(BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.GetAllUserRecordsByRole(_role);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllUserRecordsByRoleAsync(BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.GetAllUserRecordsByRoleAsync(_role);
        }
        
        public BugTrackingWebApplication.UserManagementServiceReference.Person GetUserRecordByPersonId(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.GetUserRecordByPersonId(_personId, _role);
        }
        
        public System.Threading.Tasks.Task<BugTrackingWebApplication.UserManagementServiceReference.Person> GetUserRecordByPersonIdAsync(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.GetUserRecordByPersonIdAsync(_personId, _role);
        }
        
        public BugTrackingWebApplication.UserManagementServiceReference.Person GetUserRecord(int _id, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.GetUserRecord(_id, _role);
        }
        
        public System.Threading.Tasks.Task<BugTrackingWebApplication.UserManagementServiceReference.Person> GetUserRecordAsync(int _id, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.GetUserRecordAsync(_id, _role);
        }
        
        public string DeleteUserRecord(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.DeleteUserRecord(_personId, _role);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserRecordAsync(int _personId, BugTrackingWebApplication.UserManagementServiceReference.UserRole _role) {
            return base.Channel.DeleteUserRecordAsync(_personId, _role);
        }
        
        public string UpdateUserRecord(BugTrackingWebApplication.UserManagementServiceReference.Person _person) {
            return base.Channel.UpdateUserRecord(_person);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserRecordAsync(BugTrackingWebApplication.UserManagementServiceReference.Person _person) {
            return base.Channel.UpdateUserRecordAsync(_person);
        }
        
        public BugTrackingWebApplication.UserManagementServiceReference.Person Login(string _email, string _password) {
            return base.Channel.Login(_email, _password);
        }
        
        public System.Threading.Tasks.Task<BugTrackingWebApplication.UserManagementServiceReference.Person> LoginAsync(string _email, string _password) {
            return base.Channel.LoginAsync(_email, _password);
        }
    }
}
